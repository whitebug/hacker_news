import 'package:boring_show/json_parsing.dart';
import 'package:test_api/test_api.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main(){
  test('parses topstories.json',(){
    const jsonString = '[20054831,20057777,20058485,20055517,20030685,20048752,20058653,20056977,20052623,20057100,20054082,20058174,20057612,20055442,20052840,20055419,20049364,20052000,20056058,20056675,20054150,20054763,20057907,20041252,20056833,20053233,20041139,20046467,20042575,20053354,20058502,20055162,20048205,20058168,20039194,20049308,20055003,20044876,20055736,20056621,20056523,20055700,20053188,20049079,20049097,20052286,20051778,20054231,20054659,20055084,20050786,20049491,20051535,20052980,20054848,20057159,20044430,20049393,20047184,20049075,20057558,20054827,20049900,20047128,20057894,20038844,20050173,20047918,20056592,20057509,20036907,20049116,20039047,20056505,20050345,20055439,20050666,20036169,20036972,20052010,20048653,20050428,20053794,20039891,20042355,20052231,20047051,20057974,20049624,20047891,20039980,20038619,20050764,20052496,20037366,20048842,20045742,20052891,20048042,20051999,20038632,20051043,20046433,20050024,20055898,20057471,20056875,20045380,20050047,20048786,20047460,20047231,20037227,20047170,20038751,20031730,20051741,20050059,20040779,20031443,20046277,20028454,20039164,20031693,20038959,20036776,20036194,20045695,20037710,20048216,20038645,20056426,20037524,20039402,20055465,20047979,20031854,20045309,20051234,20040002,20052522,20040485,20038683,20041384,20052702,20041076,20048359,20057980,20046316,20054295,20039335,20046065,20054884,20056585,20050445,20055772,20054583,20056230,20045717,20055075,20034038,20033728,20050792,20043410,20037562,20035818,20035245,20037813,20042147,20044326,20036450,20035077,20040182,20053821,20052482,20052634,20038879,20056830,20049591,20038852,20038663,20040636,20041321,20038869,20053808,20056593,20036509,20052605,20039314,20055584,20046709,20052427,20050904,20049736,20056140,20042842,20055284,20038374,20043310,20037019,20051061,20045791,20042184,20053539,20040868,20048066,20039589,20038698,20041021,20051891,20050913,20029247,20038032,20039863,20036833,20050645,20031758,20052575,20044679,20028666,20039892,20054009,20039481,20032022,20048268,20035893,20029319,20042421,20035983,20049459,20032979,20030618,20052931,20046675,20031156,20055066,20038476,20034699,20037116,20052810,20037962,20049807,20038872,20041602,20047587,20029661,20031539,20047015,20033776,20030486,20047527,20044167,20043408,20042494,20033164,20029466,20029420,20045110,20033551,20035028,20029981,20038493,20053525,20053513,20043675,20048499,20049468,20041506,20029476,20045373,20040641,20045534,20038790,20045615,20044378,20028566,20037452,20031655,20034841,20047904,20034452,20033519,20028625,20032676,20047662,20036080,20035353,20031403,20033317,20029376,20040935,20041865,20042779,20037763,20049869,20055844,20042441,20029911,20051170,20034891,20030261,20037082,20049739,20030065,20043891,20040897,20040314,20030681,20048622,20030150,20040730,20045244,20049160,20055235,20044897,20032847,20038151,20050143,20050140,20048129,20028686,20044318,20047161,20035791,20040021,20036437,20031573,20053804,20028822,20049620,20035611,20029781,20041549,20039514,20028370,20040633,20045452,20040062,20051966,20036321,20031056,20042878,20028836,20036233,20036195,20047732,20034999,20029966,20045355,20042699,20036819,20028817,20034797,20045570,20046930,20037957,20028466,20033814,20033770,20029492,20033941,20046038,20045692,20032010,20045283,20042959,20031788,20033313,20040347,20028812,20031464,20034786,20039652,20043255,20029991,20036615,20034696,20039225,20028811,20034785,20033599,20040966,20031570,20039998,20045238,20036152,20039406,20033958,20035848,20031103,20036821,20043245,20033782,20029833,20037077,20031673,20057672,20033644,20033608,20052668,20034456,20033499,20029106,20034226,20036163,20031823,20030932,20035459,20037409,20034215,20033742,20035289,20028669,20032462,20036680,20036101,20029954,20029418,20042407,20035326,20028833,20032686,20043989,20033869,20046239,20037051,20031838,20037160,20029350,20029077,20028847,20035171,20028389,20039154,20036296,20038570,20035473,20038897,20029836,20051078,20034059,20056864,20034080,20030919,20031957,20041487,20057589,20029844,20046771,20029519,20041274,20039248,20038006,20037943,20029464,20036591,20034411,20039465,20032031,20028915,20051048,20030375,20035514]';

    expect(parseTopStories(jsonString),isNotNull);
  }, skip: true
  );

  test('parses item.json',(){
    const jsonString =
    """{"by":"dhouston","descendants":71,"id":8863,"kids":[9224,8917,8952,8884,8887,8869,8958,8940,8908,9005,8873,9671,9067,9055,8865,8881,8872,8955,10403,8903,8928,9125,8998,8901,8902,8907,8894,8870,8878,8980,8934,8943,8876],"score":104,"time":1175714200,"title":"My YC app: Dropbox - Throw away your USB drive","type":"story","url":"http://www.getdropbox.com/u/2/screencast.html"}
    """;
    expect(parseArticle(jsonString).by, "dhouston");
  });

  test('parses item.json over a network',() async{
    final url = 'https://hacker-news.firebaseio.com/v0/beststories.json';
    final res = await http.get(url);
    if(res.statusCode == 200) {
      final idList = parseTopStories(res.body);
      if(idList.isNotEmpty){
        final storyUrl = 'https://hacker-news.firebaseio.com/v0/item/${idList.first}.json';
        final storyRes = await http.get(storyUrl);
        if(storyRes.statusCode == 200) {
          expect(parseArticle(storyRes.body), isNotNull);
        }
      }
    }
  }, skip: true);
}